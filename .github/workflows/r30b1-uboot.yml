#
#‰øÆÊîπ‰ª•‰∏ã‰ª£Á†ÅÊàñËÄÖÂºÄÂêØËß¶ÂèëÂºÄÂÖ≥ÈÉΩÂ•ΩÔºåË¶Å‰∏•Ê†ºÊåâÊ†ºÂºèÂØπÂ•Ω,ÂâçÈù¢ÊúâÂ§öÂ∞ëÁ©∫Ê†º‰πüË¶ÅÁúãÊ∏ÖÊ•ö
#
# This is a basic workflow to help you get started with Actions

name: bl-mt798x-r30b1 uboot

on: 

  repository_dispatch:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/benboguan/bl-mt798x
  REPO_BRANCH: master
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: flase
  UPLOAD_WETRANSFER: true
  UPLOAD_RELEASE: true

jobs:
  build:
    name: ÁºñËØëbl-mt798x uboot
    runs-on: ubuntu-22.04

    steps:
    - name: ÂáÜÂ§áÁªìÊùü
      uses: actions/checkout@master

    - name: ÂºÄÂßãÂÆâË£ÖÁºñËØëÊâÄÈúÄÁ≥ªÁªü
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential gcc-aarch64-linux-gnu build-essential flex bison libssl-dev python3-distutils device-tree-compiler
        sudo -E apt-get -y autoremove
        sudo -E apt-get autoclean
        sudo timedatectl set-timezone "$TZ"
    - name: ‰∏ãËΩΩubootÊ∫êÁ†Å
      run: |
        git clone https://github.com/benboguan/bl-mt798x.git /opt/uboot
    - name: ÁºñËØëuboot
      run: |
        cd /opt/uboot
        sudo chmod +x build.sh
        sudo ./build.sh
    - name : ‰∏ä‰º†
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: opt/uboot_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: opt/uboot/bin

    - name: Êï¥ÁêÜÂõ∫‰ª∂Êñá‰ª∂Â§π
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd opt/uboot/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >>$GITHUB_OUTPUT
        
    - name: ‰∏ä‰º†.configÈÖçÁΩÆÊñá‰ª∂Âú®githubÁ©∫Èó¥    
      if: steps.organizer.outputs.status == 'success' && env.UPLOAD_CONFIG == 'true'
      uses: actions/upload-artifact@master
      with:
        name: config.buildinfo_${{ env.FILE_DATE }}
        path: ./config    
    
    - name: ‰∏ä‰º†Âõ∫‰ª∂Âú®githubÁ©∫Èó¥
      uses: actions/upload-artifact@master
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: r30b1-bl-mt798x uboot
        path: ${{ env.FIRMWARE }}

    - name: ‰∏ä‰º†Âõ∫‰ª∂Âà∞WeTransfer
      id: wetransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_WETRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${FIRMWARE} 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
        echo "url=$(cat wetransfer.log | grep https | cut -f3 -d" ")" >>$GITHUB_OUTPUT
    - name: ÂàõÂª∫ release tag
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "release_tag=$(date +"%Y.%m.%d-%H%M")" >>$GITHUB_OUTPUT
        touch release.txt
        [ $UPLOAD_COWTRANSFER = true ] && echo "üîó [Cowtransfer](${{ steps.cowtransfer.outputs.url }})" >> release.txt
        [ $UPLOAD_WETRANSFER = true ] && echo "üîó [WeTransfer](${{ steps.wetransfer.outputs.url }})" >> release.txt
        echo "status=success" >>$GITHUB_OUTPUT

    - name: ‰∏ä‰º†Âõ∫‰ª∂Âà∞release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*

    - name: ÁßªÈô§ÊóßÊñá‰ª∂
      uses: c-hive/gha-remove-artifacts@v1.2.0
      with:
        age: '1 day'
        skip-recent: 3

    - name: ÁßªÈô§‰ª•ÂâçÁöÑReleases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 3
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
