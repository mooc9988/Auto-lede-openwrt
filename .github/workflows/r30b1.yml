##
#
# ÊÑüË∞¢p3terxÂ§ßÁ•ûÁöÑ‰∏ÄÈîÆÁºñËØëËÑöÊú¨
# 
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#
#‰øÆÊîπ‰ª•‰∏ã‰ª£Á†ÅÊàñËÄÖÂºÄÂêØËß¶ÂèëÂºÄÂÖ≥ÈÉΩÂ•ΩÔºåË¶Å‰∏•Ê†ºÊåâÊ†ºÂºèÂØπÂ•Ω,ÂâçÈù¢ÊúâÂ§öÂ∞ëÁ©∫Ê†º‰πüË¶ÅÁúãÊ∏ÖÊ•ö
#‰ª£Á†ÅÈáåÊúâ name: ÂêéÈù¢ÁöÑÂÜÖÂÆπÈöè‰æøÊîπ,ÂÜíÂè∑ÂêéÈù¢ÊòØÊúâ‰∏™Á©∫Ê†ºÁöÑ,Â¶ÇÊûú‰øÆÊîπÂõ∫‰ª∂ÂêçÂ≠óÂ∞±Ë¶ÅËÄÉËôëËÉΩ‰∏çËÉΩÊòæÁ§∫Âá∫‰Ω†ÊÉ≥Ë¶ÅÁöÑ

name: clt-r30b1-hanwckf Èó≠Ê∫êÂõ∫‰ª∂

on: 
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
#  schedule:
#    - cron: 0 16 * * *

env:
  REPO_URL: https://github.com/benboguan/immortalwrt-mt798x
  REPO_BRANCH: clt-r30b1
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: config/r30b1.config
  DIY_P1_SH: script/diy-part1.sh
  DIY_P2_SH: script/diy-part2.sh
  SSH_ACTIONS: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  UPLOAD_PACKAGES: false
  TZ: Asia/Shanghai

jobs:
  build:
    name: ÁºñËØëOpenWrt-immortalwrt-mt798xÂõ∫‰ª∂
    runs-on: ubuntu-22.04

    steps:
    - name: ÂáÜÂ§á
      uses: actions/checkout@main

    - name: ÂºÄÂßãÂÆâË£ÖÁºñËØëÊâÄÈúÄÁ≥ªÁªü
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential gawk gcc-multilib flex git gettext libncurses5-dev libssl-dev python3-distutils zlib1g-dev
        sudo -E apt-get -y autoremove
        sudo -E apt-get autoclean
        sudo timedatectl set-timezone "$TZ"

    - name: ‰∏ãËΩΩÂõ∫‰ª∂Ê∫êÁ†Å
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Âä†ËΩΩCacheÁºìÂ≠ò
      uses: klever1988/cachewrtbuild@main
      with:
        ccache: 'true'
        prefix: ${{ github.workspace }}/openwrt

    - name: Âä†ËΩΩfeedsË∑üËá™ÂÆö‰πâÊèí‰ª∂
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH
        
    - name: Êõ¥Êñ∞ & ÂÆâË£Ö feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Âä†ËΩΩ.configËÆæÁΩÆ
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: SSHËøúÁ®ãËøûÊé•ÊúçÂä°Âô®ÈÖçÁΩÆÂõ∫‰ª∂
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

    - name: ‰∏ãËΩΩËΩØ‰ª∂ÂåÖ
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: ÂºÄÂßãÁºñËØëÂõ∫‰ª∂
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "status=success" >>$GITHUB_OUTPUT
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Ê£ÄÊü•githubÂÇ®Â≠òÁ©∫Èó¥ÊÉÖÂÜµ
      if: (!cancelled())
      run: df -hT

    - name: ‰∏ä‰º†packagesÂà∞githubÁ©∫Èó¥
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_PACKAGES == 'true'
      with:
        name: OpenWrt_packages-${{ env.FILE_DATE }}
        path: openwrt/bin/packages/

    - name: Êï¥ÁêÜÊñá‰ª∂Âπ∂ÈáçÂëΩÂêç
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: | 
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >>$GITHUB_OUTPUT
        
    - name: ‰∏ä‰º†.configÈÖçÁΩÆÊñá‰ª∂Âú®githubÁ©∫Èó¥    
      if: steps.organizer.outputs.status == 'success' && env.UPLOAD_CONFIG == 'true'
      uses: actions/upload-artifact@main
      with:
        name: config.buildinfo_${{ env.FILE_DATE }}
        path: ./config    
    
    - name: ‰∏ä‰º†Âõ∫‰ª∂Âà∞github
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: r30b1-immortalwrt-mt798xÂõ∫‰ª∂
        path: ${{ env.FIRMWARE }}

    - name: ÁîüÊàêreleaseÊ†áÁ≠æ
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "release_tag=$(date +"%Y.%m.%d-%H%M")" >>$GITHUB_OUTPUT
        touch release.txt
        echo "clt-r30b1" >> release.txt
        echo "üì• Âõ∫‰ª∂‰∏ãËΩΩ" >> release.txt
        echo "status=success" >>$GITHUB_OUTPUT

    - name: ‰∏ä‰º†Âõ∫‰ª∂Âà∞release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*

    - name: ÁßªÈô§ÊóßÊñá‰ª∂
      uses: chika0801/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 6

    - name: ÁßªÈô§‰ª•ÂâçÁöÑReleases
      uses: dev-drprasad/delete-older-releases@v0.2.1
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 6
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
