#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#
###############ÊîπÂêçÂ≠ó##############
name: clt-r30b1-FIP-hanwckf

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
#  schedule:
#    - cron: 0 16 * * *

env:
  REPO_ID: benboguan/bl-mt798x
  REPO_BRANCH: master
  SSH_ACTIONS: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai
  ###############ÊîπÂêçÂ≠ó##############
  OPENWRT_NAME: hanwckf
  DEVICE_NAME: clt_r30b1-fip

jobs:
  build:
    runs-on: ubuntu-22.04
    
    steps:
    - name: Ê£ÄÊü•È°πÁõÆÂàÜÊîØ
      uses: actions/checkout@v4
    
    - name: ‰∏ãËΩΩubootÊ∫êÁ†Å
      uses: actions/checkout@v4
      with:
        repository: ${{ env.REPO_ID }}
        ref: ${{ env.REPO_BRANCH }}
        path: openwrt

    - name: ÂàùÂßãÂåñÁºñËØëÁéØÂ¢É
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt update
        sudo apt install build-essential bison flex bc libssl-dev python-is-python3 device-tree-compiler gcc-aarch64-linux-gnu
        ##------Build Prepare------
        sudo apt install gcc-aarch64-linux-gnu
        export CROSS_COMPILE=aarch64-linux-gnu-
        ##-------------------------
        sudo apt autoremove --purge
        sudo apt clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir    
    
    - name: SSHÈìæÊé•ÁÆ°ÁêÜ
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        
    - name: ÁºñËØëuboot
      id: compile
      run: |
        echo -e "$(nproc) thread compile"
        SOC=mt7981 BOARD=clt_r30b1 MULTI_LAYOUT=1 ./build.sh
        echo "FILE_DATE=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT
      working-directory: ./openwrt
        
    - name: Êü•ÁúãÁ£ÅÁõò‰ΩøÁî®ÊÉÖÂÜµ
      if: (!cancelled())
      run: df -hT

    - name: Êï¥ÁêÜÊñá‰ª∂
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: | 
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT
      working-directory: ./openwrt/output
      
    - name: ‰∏ä‰º†ubootÂà∞Artifacts
      uses: actions/upload-artifact@v4
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: ${{ env.FILE_DATE }}-${{ env.OPENWRT_NAME }}-${{ env.DEVICE_NAME }}
        path: ${{ env.FIRMWARE }}

    - name: ÁîüÊàêreleaseÊ†áÁ≠æ
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "release_tag=${{ env.FILE_DATE }}-${{ env.OPENWRT_NAME }}-${{ env.DEVICE_NAME }}" >> $GITHUB_OUTPUT
        touch release.txt
        echo "clt-r30b1-uboot" >> release.txt
        echo "üì• uboot‰∏ãËΩΩ" >> release.txt
        echo "status=success" >> $GITHUB_OUTPUT
        
    - name: ÂèëÂ∏ÉËá≥release
      uses: softprops/action-gh-release@v2
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: ${{ env.FIRMWARE }}/*
        name: ${{ env.FILE_DATE }}-${{ env.OPENWRT_NAME }}-${{ env.DEVICE_NAME }}
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
